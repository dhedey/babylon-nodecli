services:
  core:
    cap_add:
    - NET_ADMIN
    environment:
      JAVA_OPTS: --enable-preview -server -Xms8g -Xmx8g  -XX:MaxDirectMemorySize=2048m
        -XX:+HeapDumpOnOutOfMemoryError -XX:+UseCompressedOops -Djavax.net.ssl.trustStore=/etc/ssl/certs/java/cacerts
        -Djavax.net.ssl.trustStoreType=jks -Djava.security.egd=file:/dev/urandom -DLog4jContextSelector=org.apache.logging.log4j.core.async.AsyncLoggerContextSelector
      RADIXDLT_API_PORT: 3333
      RADIXDLT_LOG_LEVEL: {{core_node.log_level or 'info'}}
      RADIXDLT_NETWORK_ID: {{common_config.network_id}}
      RADIXDLT_NETWORK_SEEDS_REMOTE: {{core_node.trusted_node}}
      RADIXDLT_NETWORK_USE_PROXY_PROTOCOL: '{{core_node.use_proxy_protocol or 'false'}}'
      RADIXDLT_SIGN_ENABLE: 'true'
      RADIXDLT_TRANSACTIONS_API_ENABLE: '{{core_node.enable_transaction}}'
      RADIXDLT_VALIDATOR_KEY_LOCATION: /home/radixdlt/node-keystore.ks
      RADIX_NODE_KEYSTORE_PASSWORD: {{core_node.keydetails.keystore_password}}
      {% if common_config.genesis_json_location is defined %}
      RADIXDLT_GENESIS_FILE: "{{common_config.genesis_json_location}}"
      {% endif %}
    image: radixdlt/radixdlt-core:{{core_node.core_release}}
    init: true
    mem_limit: {{core_node.memory_limit or '12000m'}}
    restart: unless-stopped
    ulimits:
      memlock: '-1'
      nofile:
        hard: '65536'
        soft: '65536'
    volumes:
    {% if core_node.data_directory is defined %}
    - core_ledger:/home/radixdlt/RADIXDB
    {% endif %}
    - {{core_node.keydetails.keyfile_path ~ '/' ~ core_node.keydetails.keyfile_name }}:/home/radixdlt/node-keystore.ks
    {% if common_config.genesis_json_location is defined %}
    - "{{common_config.genesis_json_location}}:/home/radixdlt/genesis.json"
    {% endif %}
  nginx:
    environment:
      RADIXDLT_NETWORK_USE_PROXY_PROTOCOL: '{{core_node.use_proxy_protocol or 'false'}}'
    image: radixdlt/radixdlt-nginx:1.1.1
    ports:
    - 443:443
    - 30000:30000
    restart: unless-stopped
    ulimits:
      nofile:
        hard: '65536'
        soft: '65536'
    volumes:
    - nginx_secrets:/etc/nginx/secrets
 {% if postgress_db.setup is defined and gateway_api.postgresSettings.setup =='local' %}
  postgres_db:
    image: "postgres:12-alpine"
    ports:
      - "127.0.0.1:5532:5432"
    stop_grace_period: 90s
    restart: unless-stopped
    volumes:
      - {{postgress_db.data_mount_path}}:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: "{{postgress_db.postgres_user}}"
      POSTGRES_PASSWORD: "{{postgress_db.postgres_password}}"
      POSTGRES_DB: "{{postgress_db.postgres_dbname}}"
 {% endif %}
 {% if gateway_api is defined %}
    gateway_api: # This is the base -- the _image and _built containers are defined below
    image: radixdlt/ng-gateway-api:1.1.2
    profiles: ["NONE"]
    ports:
      - "127.0.0.1:5308:80" # This allows you to connect to the API at http://localhost:5308
      - "127.0.0.1:1235:1235" # This allows you to connect to the metrics API at http://localhost:1235
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      ASPNETCORE_URLS: "http://*:80" # Binds to 80 on all interfaces
      RADIX_NG_API__PrometheusMetricsPort: "1235"
      RADIX_NG_API__MaxWaitForDbOnStartupMs: "${MAX_DB_WAIT_MS_ON_START}" # Wait for PostGres to boot up
      RADIX_NG_API__DisableCoreApiHttpsCertificateChecks: "${DISABLE_CORE_API_CERTIFICATE_CHECKS}"
      RADIX_NG_API__NetworkName: "${NETWORK_NAME}"
      RADIX_NG_API__EnableSwagger: "${ENABLE_SWAGGER}"
      RADIX_NG_API__MaxPageSize: "${MAX_PAGE_SIZE}"
      RADIX_NG_API__AcceptableLedgerLag__PreventReadRequestsIfDbLedgerIsBehind: "${PREVENT_OUTDATED_READ_REQUESTS}"
      RADIX_NG_API__AcceptableLedgerLag__PreventConstructionRequestsIfDbLedgerIsBehind: "${PREVENT_OUTDATED_CONSTRUCTION_REQUESTS}"
      RADIX_NG_API__ConnectionStrings__ReadOnlyDbContext: "Host=postgres_db:5432;Database=${POSTGRES_DB_NAME};Username=${POSTGRES_SUPERUSER};Password=${POSTGRES_SUPERUSER_PASSWORD}"
      RADIX_NG_API__ConnectionStrings__ReadWriteDbContext: "Host=postgres_db:5432;Database=${POSTGRES_DB_NAME};Username=${POSTGRES_SUPERUSER};Password=${POSTGRES_SUPERUSER_PASSWORD}"
      RADIX_NG_API__CoreApiNodes__0__Name: "${NODE_0_NAME}"
      RADIX_NG_API__CoreApiNodes__0__CoreApiAddress: "${NODE_0_CORE_API_ADDRESS}"
      RADIX_NG_API__CoreApiNodes__0__CoreApiAuthorizationHeader: "${NODE_0_CORE_API_AUTHORIZATION_HEADER}"
      RADIX_NG_API__CoreApiNodes__0__RequestWeighting: "1"
      RADIX_NG_API__CoreApiNodes__0__Enabled: "${NODE_0_ENABLED}"
      RADIX_NG_API__CoreApiNodes__1__Name: "${NODE_1_NAME}"
      RADIX_NG_API__CoreApiNodes__1__CoreApiAddress: "${NODE_1_CORE_API_ADDRESS}"
      RADIX_NG_API__CoreApiNodes__1__CoreApiAuthorizationHeader: "${NODE_1_CORE_API_AUTHORIZATION_HEADER}"
      RADIX_NG_API__CoreApiNodes__1__RequestWeighting: "1"
      RADIX_NG_API__CoreApiNodes__1__Enabled: "${NODE_1_ENABLED}"
      RADIX_NG_API__CoreApiNodes__2__Name: "${NODE_2_NAME}"
      RADIX_NG_API__CoreApiNodes__2__CoreApiAddress: "${NODE_2_CORE_API_ADDRESS}"
      RADIX_NG_API__CoreApiNodes__2__CoreApiAuthorizationHeader: "${NODE_2_CORE_API_AUTHORIZATION_HEADER}"
      RADIX_NG_API__CoreApiNodes__2__RequestWeighting: "1"
      RADIX_NG_API__CoreApiNodes__2__Enabled: "${NODE_2_ENABLED}"
      RADIX_NG_API__CoreApiNodes__3__Name: "${NODE_3_NAME}"
      RADIX_NG_API__CoreApiNodes__3__CoreApiAddress: "${NODE_3_CORE_API_ADDRESS}"
      RADIX_NG_API__CoreApiNodes__3__CoreApiAuthorizationHeader: "${NODE_3_CORE_API_AUTHORIZATION_HEADER}"
      RADIX_NG_API__CoreApiNodes__3__RequestWeighting: "1"
      RADIX_NG_API__CoreApiNodes__3__Enabled: "${NODE_3_ENABLED}"
      RADIX_NG_API__CoreApiNodes__4__Name: "${NODE_4_NAME}"
      RADIX_NG_API__CoreApiNodes__4__CoreApiAddress: "${NODE_4_CORE_API_ADDRESS}"
      RADIX_NG_API__CoreApiNodes__4__CoreApiAuthorizationHeader: "${NODE_4_CORE_API_AUTHORIZATION_HEADER}"
      RADIX_NG_API__CoreApiNodes__4__RequestWeighting: "1"
      RADIX_NG_API__CoreApiNodes__4__Enabled: "${NODE_4_ENABLED}"
 {% endif %}

version: '2.2'
volumes:
 {% if core_node.data_directory is defined %}
  core_ledger:
    driver: local
    driver_opts:
      device: {{ core_node.data_directory }}
      o: bind
      type: none
 {% endif %}
  nginx_secrets:
