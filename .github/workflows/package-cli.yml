name: Package cli

on:
  release:
    types: [published]
  push:
    tags:
      - test-artifacts*
  pull_request:
    branches:
      - main
jobs:
  package_ubuntu_cli:
    name: "Package cli for Ubuntu"
    runs-on: [node-only]
    steps:
      - name: cancel running workflows
        uses: styfle/cancel-workflow-action@0.8.0
        with:
          access_token: ${{ github.token }}
      - name: Checkout
        uses: actions/checkout@v2
      - name: Dump context
        uses: crazy-max/ghaction-dump-context@v1
      - name: Install build essentials
        run: sudo apt-get -y install build-essential
      - name: setup python
        uses: actions/setup-python@v2.2.1
        with:
          python-version: 3.7.6
      - name: Build the binary for ubuntu
        run: |
          cd node-runner-cli
          make output-ubuntu-focal
      - name: "Upload generated cli file"
        uses: actions/upload-artifact@v2.2.3
        with:
          name: ubuntu 20.04
          path: "${{ github.workspace }}/node-runner-cli/out/ubuntu/focal/radixnode"

  upload-asset-store:
    environment: AWS_ARTIFACT
    runs-on: [ubuntu-latest]
    if: ${{ github.event_name == 'push' }}
    needs:
      - package_ubuntu_cli
    steps:

      - name: Checkout
        uses: actions/checkout@v2
      - name: set branchname with commit
        run: |
          ls -l
          BRANCH_NAME_WITH_HYPENS=$(echo ${GITHUB_REF##*/} | sed 's/\//-/g')
          COMMIT=$(git log -1 --format=%h )
          BRANCH_WITH_COMMIT=$BRANCH_NAME_WITH_HYPENS-$COMMIT
          echo "BRANCH_WITH_COMMIT=$BRANCH_WITH_COMMIT" >> $GITHUB_ENV
      - name: Configure AWS Region
        run: echo "AWS_DEFAULT_REGION=eu-west-1" >> $GITHUB_ENV
      - id: install-aws-cli
        uses: unfor19/install-aws-cli-action@v1
        with:
          version: 2
      - name: Download packaged cli
        uses: actions/download-artifact@v3
        with:
          name: ubuntu 20.04
      - name: Upload cli to asset store
        run: |
          ls */**
          aws s3 cp radixnode s3://${{secrets.ARTIFACT_AWS_BUCKET }}/radixnode/${{env.BRANCH_WITH_COMMIT}}/radixnode-ubuntu-20.04
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.ARTIFACT_AWS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.ARTIFACT_AWS_SECRET_ACCESS_KEY}}

  upload-release:
    runs-on: [ubuntu-latest]
    if: ${{ github.event_name == 'release' }}
    needs:
      - package_ubuntu_cli
    steps:
      - name: Download packaged cli
        uses: actions/download-artifact@v3
        with:
          name: ubuntu 20.04
      - name: Get release
        id: get_release
        uses: bruceadams/get-release@v1.2.2
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Upload radixcli ubuntu binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./radixnode
          asset_name: radixnode-ubuntu-20.04
          asset_content_type: application/octet-stream
        if: ${{ github.event_name == 'release' }}

  test-core-only-node:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: [node-only]
    needs:
      - package_ubuntu_cli
    steps:
      - name: Download packaged cli
        uses: actions/download-artifact@v3
        with:
          name: ubuntu 20.04
      - name: Setup config
        run: |
          chmod +x ./radixnode
          mkdir -p ${{ github.workspace }}/node-config
          export DISABLE_VERSION_CHECK=true
          export DOCKER_COMPOSE_LOCATION="/usr/local/bin/docker-compose"
          ./radixnode docker config -d ${{ github.workspace }}/node-config -t radix://tn1qv9f8ys7ade4khjyr2s6zlhuxjqvhzz39kvjskupaj9lvhl3lwxauc67nn8@65.1.217.210 -s CORE -n 2 -k password -nk
      - name: Run CLI setup
        run: |
          export DISABLE_VERSION_CHECK=true
          export DOCKER_COMPOSE_LOCATION="/usr/local/bin/docker-compose"
          ./radixnode docker setup -f ${{ github.workspace }}/node-config/config.yaml -a
          sleep 60
          DOCKER_COMPOSE_FOLDER_PREFIX=ubuntu ./radixnode auth set-admin-password -m DOCKER -p admin
          NGINX_ADMIN_PASSWORD=test ./radixnode api system health
          DOCKER_COMPOSE_FOLDER_PREFIX=ubuntu ./radixnode auth set-metrics-password -m DOCKER -p metrics
          DOCKER_COMPOSE_FOLDER_PREFIX=ubuntu ./radixnode auth set-superadmin-password -m DOCKER -p superadmin

      - uses: actions/setup-python@v3
        with:
          python-version: '3.x'
          architecture: 'x64'
      - name: Run api commands
        run: |
          export DISABLE_VERSION_CHECK=true
          export NGINX_ADMIN_PASSWORD=admin
          export NGINX_METRICS_PASSWORD=metrics
          export NGINX_SUPERADMIN_PASSWORD=superadmin
          python tests.py


  test-full-stack:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: [node-cli-full-stack]
    needs:
      - package_ubuntu_cli
    steps:
      - name: Download packaged cli
        uses: actions/download-artifact@v3
        with:
          name: ubuntu 20.04
      - name: Setup config
        run: |
          chmod +x ./radixnode
          mkdir -p ${{ github.workspace }}/node-config
          export DISABLE_VERSION_CHECK=true
          ./radixnode docker config -d ${{ github.workspace }}/node-config -t radix://tn1qv9f8ys7ade4khjyr2s6zlhuxjqvhzz39kvjskupaj9lvhl3lwxauc67nn8@65.1.217.210 -s CORE GATEWAY -n 2 -k password -nk -p postgres
      - name: Run CLI setup
        run: |
          export DISABLE_VERSION_CHECK=true
          ./radixnode docker setup -f ${{ github.workspace }}/node-config/config.yaml -a
          sleep 60
          DOCKER_COMPOSE_FOLDER_PREFIX=ubuntu ./radixnode auth set-admin-password -m DOCKER -p test
          NGINX_ADMIN_PASSWORD=test ./radixnode api system health
  test-full-stack-no-nginx:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: [node-cli-without-nginx]
    needs:
      - package_ubuntu_cli
    steps:
      - name: Download packaged cli
        uses: actions/download-artifact@v3
        with:
          name: ubuntu 20.04
      - name: Setup config
        run: |
          chmod +x ./radixnode
          mkdir -p ${{ github.workspace }}/node-config
          export DISABLE_VERSION_CHECK=true
          ./radixnode docker config -d ${{ github.workspace }}/node-config -t radix://tn1qv9f8ys7ade4khjyr2s6zlhuxjqvhzz39kvjskupaj9lvhl3lwxauc67nn8@65.1.217.210 \
            -s CORE GATEWAY -n 2 -k password -nk -p postgres -xg false -xc false
      - name: Run CLI setup
        run: |
          export DISABLE_VERSION_CHECK=true
          ./radixnode docker setup -f ${{ github.workspace }}/node-config/config.yaml -a
          sleep 60
          NGINX_ADMIN_PASSWORD=test NODE_END_POINT="http://localhost:3333" ./radixnode api system health